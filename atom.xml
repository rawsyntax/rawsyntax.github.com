<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Raw Syntax]]></title>
  <link href="http://rawsyntax.github.com/atom.xml" rel="self"/>
  <link href="http://rawsyntax.github.com/"/>
  <updated>2011-11-09T21:33:17-05:00</updated>
  <id>http://rawsyntax.github.com/</id>
  <author>
    <name><![CDATA[Eric Himmelreich]]></name>
    <email><![CDATA[eric@rawsyntax.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learn Emacs: Useful Links]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-emacs-useful-links/"/>
    <updated>2011-11-08T23:02:00-05:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-emacs-useful-links</id>
    <content type="html"><![CDATA[<p>I have a running series of blog posts on
<a href="http://rawsyntax.github.com/blog/categories/learn-emacs/">learning emacs</a>.  It is a life-long
endeavor.  In this post I&#8217;m going to share some of the emacs resources
that I have come across over the years.</p>

<h3><a href="http://www.emacswiki.org/">EmacsWiki</a></h3>

<p>This is the definitive source for emacs information (aside from the emacs manual).  There&#8217;s a ton of information there, some of it is outdated, but it&#8217;s still worth your time.</p>

<h3>Steve Yegge&#8217;s Emacs Posts &#8211; <a href="https://sites.google.com/site/steveyegge2/blog-rants">old blog</a> and <a href="http://steve-yegge.blogspot.com/search?q=emacs">new blog</a></h3>

<p>All I can say is that Steve Yegge has written a lot about emacs, and has made some awesome elisp contributions.  I&#8217;m a huge fan of js2-mode.  Just do a search for emacs on his old and new blogs. <a href="https://sites.google.com/site/steveyegge2/effective-emacs">Effective Emacs</a>
is a good post to start with.</p>

<h3><a href="http://avdi.org/devblog/category/emacs-reboot/">Avdi Grimm&#8217;s Emacs Reboot</a></h3>

<p>Avdi Grimm is writing about re-doing his emacs config from scratch.
It&#8217;s very informative and super easy to follow.  I&#8217;ve used some ideas
from his posts.  His <a href="https://github.com/avdi/.emacs24.d">emacs config is on github</a>.</p>

<h3><a href="http://emacsrookie.com/">emacsrookie</a></h3>

<p>This site is relatively new, and there are only a few posts on it
right now, but it is quality emacs content.</p>

<h3><a href="http://emacsrocks.com/">emacsrocks</a></h3>

<p>Emacs screencasts.  It&#8217;s another new site, but I can&#8217;t argue with free content.</p>

<h3><a href="http://emacsformacosx.com/">EmacsForMacOSX</a></h3>

<p>This site is very convenient for getting the latest os x builds of
emacs.  Or you can run the build-script yourself
(<a href="https://github.com/caldwell/build-emacs">source on github</a>).</p>

<h3><a href="https://github.com/search?&amp;q=emacs&amp;type=Everything&amp;repo=&amp;langOverride=&amp;start_value=1">Github</a></h3>

<p>Search emacs on github.  You will find many other emacs users&#8217; configs
hosted there.  Read their configs, and you will learn emacs.  I keep
<a href="https://github.com/rawsyntax/emacs.d">my emacs config there</a>.</p>

<p>Did I miss any useful emacs resources?</p>

<p>UPDATE:  The users at <a href="http://reddit.com/r/emacs/">emacs reddit</a> let
me know I forgot a big one.  Check out <a href="http://emacs-fu.blogspot.com">emacs-fu</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Lion New Tab in Terminal Changes Directory]]></title>
    <link href="http://rawsyntax.github.com/blog/os-x-lion-new-tab-in-terminal-changes-directory/"/>
    <updated>2011-10-25T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/os-x-lion-new-tab-in-terminal-changes-directory</id>
    <content type="html"><![CDATA[<p>In 10.6 when you opened a new tab in Terminal.app it opened to your home directory. In 10.7 a new tab in Terminal.app opens to your current working directory (from any previous tabs). I found this feature to be annoying, as I already have a command that will do it when I want it, and I prefer the old 10.6 behavior.</p>

<p>Luckily, this is a preference in Terminal.app and can be easily changed.</p>

<p><img src="http://media.tumblr.com/tumblr_ltmvs87NgE1qfdxjm.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn Emacs: Keyboard Macros]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-emacs-keyboard-macros/"/>
    <updated>2011-08-28T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-emacs-keyboard-macros</id>
    <content type="html"><![CDATA[<p>An emacs keyboard macro is just a recording of user input into emacs, which means that most anything you can do in emacs can be recorded as a macro. Read that again. Pretty powerful.</p>

<p>Here&#8217;s how it works. To start recording, type</p>

<pre><code>C-x (
</code></pre>

<p>and input the commands in your macro. Then type</p>

<pre><code>C-x )
</code></pre>

<p>to stop recording. Then type</p>

<pre><code>C-x e
</code></pre>

<p>to apply the macro once, or</p>

<pre><code>C-u 0 C-x e
</code></pre>

<p>to apply the macro until the bell rings or end of buffer is reached</p>

<p>Keep in mind that you must not ring the bell when defining a keyboard macro (by accident, or with C-g). If you do, you&#8217;ll have to start all over defining your keyboard macro</p>

<p>Typically I use a keyboard macro when I have a file full of data that needs slight altering, for example a non-standard CSV-like file. I&#8217;ll define a macro in terms of what needs changing on each line and then apply the macro for each line (until the end of the buffer).</p>

<h3>Further Reading</h3>

<ul>
<li><a href="http://www.emacswiki.org/emacs/KeyboardMacros">emacs wiki on keyboard macros</a></li>
<li><a href="http://www.emacswiki.org/emacs/KeyboardMacrosTricks">keyboard macros tricks</a></li>
<li><a href="http://www.gnu.org/s/libtool/manual/emacs/Keyboard-Macros.html">emacs manual entry on keyboard macros</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use LiveReload with Rails for faster development]]></title>
    <link href="http://rawsyntax.github.com/blog/use-livereload-with-rails-for-faster-development/"/>
    <updated>2011-08-15T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/use-livereload-with-rails-for-faster-development</id>
    <content type="html"><![CDATA[<p>LiveReload applies CSS/JS changes to Safari or Chrome without reloading the page, and automatically reloads when the html changes. Let that soak in for a minute. In this post I&#8217;ll go over how to get it installed and working on your Rails projects.</p>

<p>The installation process has two steps. First we install a browser extension that listens for livereload events. Then we use guard to listen for  system events and send information to the browser.</p>

<p>First install the livereload addon for <a href="https://chrome.google.com/webstore/detail/jnihajbhpnppcggbcgedagnkighmdlei">chrome</a> or <a href="https://github.com/downloads/mockko/livereload/LiveReload-1.6.2.safariextz">safari</a>.</p>

<p>In your rails project gemfile add</p>

<pre><code>gem 'rb-fsevent'
gem 'guard-livereload'
</code></pre>

<p>Run</p>

<pre><code>bundle install
</code></pre>

<p>Then run</p>

<pre><code>guard init livereload &amp;&amp; guard
</code></pre>

<p>To setup guard for livereload and start monitoring for file system events. The last step is to activate the browser extension. You will need to click the LiveReload button:</p>

<p><img src="http://media.tumblr.com/tumblr_lpzehwqgO41qfdxjm.png"></p>

<p>Now when you change a file in your view, Safari / Chrome will load the new content automatically.</p>

<h2>Notes on RubyCocoa</h2>

<p>The notes on the <a href="https://github.com/mockko/livereload">livereload repo</a> are a little confusing. Livereload can also work via RubyCocoa (instead of guard- livereload). If you&#8217;re running ruby 1.9.2 you cannot install RubyCocoa on it. RubyCocoa is not 1.9.x compatible. So I opt to use the browser extension and guard.</p>

<p>More info <a href="http://livereload.com/">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn Bash: Remove Commands from your History]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-bash-remove-commands-from-your-history/"/>
    <updated>2011-08-11T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-bash-remove-commands-from-your-history</id>
    <content type="html"><![CDATA[<p>Occasionally I type a password or other sensitive information into a shell
prompt. Using bash history, the command can be removed.</p>

<div><script src='https://gist.github.com/1330991.js?file='></script>
<noscript><pre><code># say we start with an empty bash command history
bash-3.2$ history
    1  history


# enter a command that requires a password
bash-3.2$ sudo rm -i some_file
Password:
# accidentally ^C and type your password
# into the prompt and hit enter
bash-3.2$ secret_password
bash: secret_password: command not found


# your password is now there for all to
# see in your bash history
bash-3.2$ history
    1  history
    2  sudo rm -i some_file
    3  secret_password
    4  history


# first option to fix it, delete the numbered entry from
# history and write to your ~/.bash_history file
bash-3.2$ history -d 3
bash-3.2$ history -w


# entry 3 will be removed entirely from your command history
bash-3.2$ history
    1  history
    2  sudo rm -i some_file
    3  history
    4  history -d 3
    5  history -w
    6  history


# the second option is to clear the entire history
# and write the changes to disk
bash-3.2$ history -c
bash-3.2$ history -w


# it's now pretty obvious that your history has been
# scrubbed clean, but at least your password is history!
bash-3.2$ history
    1  history -w
    2  history</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Host your side project for free]]></title>
    <link href="http://rawsyntax.github.com/blog/host-your-side-project-for-free/"/>
    <updated>2011-08-10T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/host-your-side-project-for-free</id>
    <content type="html"><![CDATA[<p>In this post I explain how to host your side project on Heroku for free. There are some limits of course. I&#8217;m assuming your side project is written in Ruby (RACK compatible), Node.js, or Clojure. I&#8217;m assuming you&#8217;re using git for version control (heroku uses git push for deploys). I&#8217;ll also discuss storage limitations (database, web assets, etc).</p>

<p>Looking for inspiration for a side project? <a href="http://rawsyntax.com/post/5982784556/importance-of-side-projects">Read my post about side projects</a></p>

<h2>Sign up for Heroku</h2>

<p><img src="http://media.tumblr.com/tumblr_lpp3jgSnE31qfdxjm.png"></p>

<h2>Create a Project on Heroku</h2>

<p>First install the heroku gem.</p>

<div><script src='https://gist.github.com/9.js?file='></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset='utf-8'&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;chrome=1&quot;&gt;
        &lt;title&gt;404 - GitHub&lt;/title&gt;
    &lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot; /&gt;
    &lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot; /&gt;

    
    

    &lt;meta content=&quot;authenticity_token&quot; name=&quot;csrf-param&quot; /&gt;
&lt;meta name=&quot;csrf-token&quot; /&gt;

    &lt;link href=&quot;https://a248.e.akamai.net/assets.github.com/stylesheets/bundle_github.css?b4b7d3dfc591909dc4259677aecf00c2b4bdd58c&quot; media=&quot;screen&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
    

    &lt;script src=&quot;https://a248.e.akamai.net/assets.github.com/javascripts/bundle_jquery.js?1cda878e9113acce74087d5ff1a5e1c49fb94eeb&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;https://a248.e.akamai.net/assets.github.com/javascripts/bundle_github.js?2997c5a0a3d531e02e04654f1adfd1772604c882&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    

    
  &lt;/head&gt;


  &lt;body class=&quot;logged_out   env-production &quot;&gt;
    


    

    &lt;div id=&quot;main&quot;&gt;
      &lt;div id=&quot;header&quot; class=&quot;true&quot;&gt;
          &lt;a class=&quot;logo&quot; href=&quot;https://github.com&quot;&gt;
            &lt;img alt=&quot;github&quot; class=&quot;default svg&quot; height=&quot;45&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6.svg&quot; /&gt;
            &lt;img alt=&quot;github&quot; class=&quot;default png&quot; height=&quot;45&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6.png&quot; /&gt;
            &lt;!--[if (gt IE 8)|!(IE)]&gt;&lt;!--&gt;
            &lt;img alt=&quot;github&quot; class=&quot;hover svg&quot; height=&quot;45&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.svg&quot; /&gt;
            &lt;img alt=&quot;github&quot; class=&quot;hover png&quot; height=&quot;45&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/header/logov6-hover.png&quot; /&gt;
            &lt;!--&lt;![endif]--&gt;
          &lt;/a&gt;

        &lt;div class=&quot;topsearch&quot;&gt;
    &lt;!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    --&gt;
    &lt;ul class=&quot;nav logged_out&quot;&gt;
        &lt;li class=&quot;pricing&quot;&gt;&lt;a href=&quot;https://github.com/plans&quot;&gt;Signup and Pricing&lt;/a&gt;&lt;/li&gt;
        &lt;li class=&quot;explore&quot;&gt;&lt;a href=&quot;https://github.com/explore&quot;&gt;Explore GitHub&lt;/a&gt;&lt;/li&gt;
      &lt;li class=&quot;features&quot;&gt;&lt;a href=&quot;https://github.com/features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt;
        &lt;li class=&quot;blog&quot;&gt;&lt;a href=&quot;https://github.com/blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;
      &lt;li class=&quot;login&quot;&gt;&lt;a href=&quot;https://github.com/login?return_to=%2Fgist%2F9%2F&quot;&gt;Login&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;

      &lt;/div&gt;

      
        &lt;div class=&quot;site&quot;&gt;
          

&lt;style type=&quot;text/css&quot;&gt;
    * {
        margin: 0px;
        padding: 0px;
    }
    #parallax_illustration {
        display:block;
        width: 940px;
        height: 375px;
        margin: 20px 0 0 20px;
        position: relative;
        overflow: hidden;
    }
    #parallax_illustration #parallax_error_text {
        position: absolute;
        top: 72px;
        left: 72px;
        z-index: 10;
    }
    #parallax_illustration #parallax_octocat {
        position: absolute;
        top: 94px;
        left: 356px;
        z-index: 9;
    }
    #parallax_illustration #parallax_speeder {
        position: absolute;
        top: 150px;
        left: 432px;
        z-index: 8;
    }
    #parallax_illustration #parallax_octocatshadow {
        position: absolute;
        top: 297px;
        left: 371px;
        z-index: 7;
    }
    #parallax_illustration #parallax_speedershadow {
        position: absolute;
        top: 263px;
        left: 442px;
        z-index: 6;
    }
    #parallax_illustration #parallax_building_1 {
        position: absolute;
        top: 73px;
        left: 467px;
        z-index: 5;
    }
    #parallax_illustration #parallax_building_2 {
        position: absolute;
        top: 113px;
        left: 762px;
        z-index: 4;
    }
    #parallax_illustration #parallax_bg {
        position: absolute;
        top: -20px;
        left: -20px;
        z-index: 1;
    }
&lt;/style&gt;



&lt;div id=&quot;parallax_illustration&quot;&gt;
  &lt;img alt=&quot;404 | &amp;ldquo;This is not the web page you are looking for&amp;rdquo;&quot; class=&quot;js-plaxify&quot; data-xrange=&quot;20&quot; data-yrange=&quot;10&quot; height=&quot;249&quot; id=&quot;parallax_error_text&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_errortext.png&quot; width=&quot;271&quot; /&gt;
  &lt;img alt=&quot;Octobi Wan Catnobi&quot; class=&quot;js-plaxify&quot; data-xrange=&quot;10&quot; data-yrange=&quot;10&quot; height=&quot;230&quot; id=&quot;parallax_octocat&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_octocat.png&quot; width=&quot;188&quot; /&gt;
  &lt;img alt=&quot;land speeder&quot; class=&quot;js-plaxify&quot; data-xrange=&quot;10&quot; data-yrange=&quot;10&quot; height=&quot;156&quot; id=&quot;parallax_speeder&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_speeder.png&quot; width=&quot;440&quot; /&gt;
  &lt;img alt=&quot;Octobi Wan Catnobi's shadow&quot; class=&quot;js-plaxify&quot; data-xrange=&quot;10&quot; data-yrange=&quot;10&quot; height=&quot;49&quot; id=&quot;parallax_octocatshadow&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_octocatshadow.png&quot; width=&quot;166&quot; /&gt;
  &lt;img alt=&quot;land speeder's shadow&quot; class=&quot;js-plaxify&quot; data-xrange=&quot;10&quot; data-yrange=&quot;10&quot; height=&quot;75&quot; id=&quot;parallax_speedershadow&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_speedershadow.png&quot; width=&quot;430&quot; /&gt;
  &lt;img alt=&quot;building&quot; class=&quot;js-plaxify&quot; data-invert=&quot;true&quot; data-xrange=&quot;50&quot; data-yrange=&quot;20&quot; height=&quot;123&quot; id=&quot;parallax_building_1&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_building_1.png&quot; width=&quot;304&quot; /&gt;
  &lt;img alt=&quot;building&quot; class=&quot;js-plaxify&quot; data-invert=&quot;true&quot; data-xrange=&quot;75&quot; data-yrange=&quot;30&quot; height=&quot;50&quot; id=&quot;parallax_building_2&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_building_2.png&quot; width=&quot;116&quot; /&gt;
  &lt;img alt=&quot;building&quot; class=&quot;js-plaxify&quot; data-invert=&quot;true&quot; data-xrange=&quot;0&quot; data-yrange=&quot;40&quot; height=&quot;415&quot; id=&quot;parallax_bg&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/404/parallax_bg.jpg&quot; width=&quot;940&quot; /&gt;
&lt;/div&gt;

&lt;/script&gt;

        &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- footer --&gt;
    &lt;div id=&quot;footer&quot; &gt;
      
  &lt;div class=&quot;upper_footer&quot;&gt;
     &lt;div class=&quot;site&quot; class=&quot;clearfix&quot;&gt;

       &lt;!--[if IE]&gt;&lt;h4 id=&quot;blacktocat_ie&quot;&gt;GitHub Links&lt;/h4&gt;&lt;![endif]--&gt;
       &lt;![if !IE]&gt;&lt;h4 id=&quot;blacktocat&quot;&gt;GitHub Links&lt;/h4&gt;&lt;![endif]&gt;

       &lt;ul class=&quot;footer_nav&quot;&gt;
         &lt;h4&gt;GitHub&lt;/h4&gt;
         &lt;li&gt;&lt;a href=&quot;https://github.com/about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;https://github.com/blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;https://github.com/features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;https://github.com/contact&quot;&gt;Contact &amp;amp; Support&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;https://github.com/training&quot;&gt;Training&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://status.github.com/&quot;&gt;Site Status&lt;/a&gt;&lt;/li&gt;
       &lt;/ul&gt;

       &lt;ul class=&quot;footer_nav&quot;&gt;
         &lt;h4&gt;Tools&lt;/h4&gt;
         &lt;li&gt;&lt;a href=&quot;http://mac.github.com/&quot;&gt;GitHub for Mac&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://mobile.github.com/&quot;&gt;Issues for iPhone&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;https://gist.github.com&quot;&gt;Gist: Code Snippets&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://fi.github.com/&quot;&gt;Enterprise Install&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://jobs.github.com/&quot;&gt;Job Board&lt;/a&gt;&lt;/li&gt;
       &lt;/ul&gt;

       &lt;ul class=&quot;footer_nav&quot;&gt;
         &lt;h4&gt;Extras&lt;/h4&gt;
         &lt;li&gt;&lt;a href=&quot;http://shop.github.com/&quot;&gt;GitHub Shop&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://octodex.github.com/&quot;&gt;The Octodex&lt;/a&gt;&lt;/li&gt;
       &lt;/ul&gt;

       &lt;ul class=&quot;footer_nav&quot;&gt;
         &lt;h4&gt;Documentation&lt;/h4&gt;
         &lt;li&gt;&lt;a href=&quot;http://help.github.com/&quot;&gt;GitHub Help&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://developer.github.com/&quot;&gt;Developer API&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://github.github.com/github-flavored-markdown/&quot;&gt;GitHub Flavored Markdown&lt;/a&gt;&lt;/li&gt;
         &lt;li&gt;&lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
       &lt;/ul&gt;

     &lt;/div&gt;&lt;!-- /.site --&gt;
  &lt;/div&gt;&lt;!-- /.upper_footer --&gt;

&lt;div class=&quot;lower_footer&quot;&gt;
  &lt;div class=&quot;site&quot; class=&quot;clearfix&quot;&gt;
    &lt;!--[if IE]&gt;&lt;div id=&quot;legal_ie&quot;&gt;&lt;![endif]--&gt;
    &lt;![if !IE]&gt;&lt;div id=&quot;legal&quot;&gt;&lt;![endif]&gt;
      &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/site/terms&quot;&gt;Terms of Service&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/site/privacy&quot;&gt;Privacy&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;

      &lt;p&gt;&amp;copy; 2011 &lt;span id=&quot;_rrt&quot; title=&quot;0.02156s from fe9.rs.github.com&quot;&gt;GitHub&lt;/span&gt; Inc. All rights reserved.&lt;/p&gt;
    &lt;/div&gt;&lt;!-- /#legal or /#legal_ie--&gt;

      &lt;div class=&quot;sponsor&quot;&gt;
        &lt;a href=&quot;http://www.rackspace.com&quot; class=&quot;logo&quot;&gt;
          &lt;img alt=&quot;Dedicated Server&quot; height=&quot;36&quot; src=&quot;https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspace_logo.png?v2&quot; width=&quot;38&quot; /&gt;
        &lt;/a&gt;
        Powered by the &lt;a href=&quot;http://www.rackspace.com &quot;&gt;Dedicated
        Servers&lt;/a&gt; and&lt;br/&gt; &lt;a href=&quot;http://www.rackspacecloud.com&quot;&gt;Cloud
        Computing&lt;/a&gt; of Rackspace Hosting&lt;span&gt;&amp;reg;&lt;/span&gt;
      &lt;/div&gt;
  &lt;/div&gt;&lt;!-- /.site --&gt;
&lt;/div&gt;&lt;!-- /.lower_footer --&gt;

    &lt;/div&gt;&lt;!-- /#footer --&gt;

    

&lt;div id=&quot;keyboard_shortcuts_pane&quot; class=&quot;instapaper_ignore readability-extra&quot; style=&quot;display:none&quot;&gt;
  &lt;h2&gt;Keyboard Shortcuts &lt;small&gt;&lt;a href=&quot;#&quot; class=&quot;js-see-all-keyboard-shortcuts&quot;&gt;(see all)&lt;/a&gt;&lt;/small&gt;&lt;/h2&gt;

  &lt;div class=&quot;columns threecols&quot;&gt;
    &lt;div class=&quot;column first&quot;&gt;
      &lt;h3&gt;Site wide shortcuts&lt;/h3&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;s&lt;/dt&gt;
        &lt;dd&gt;Focus site search&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;?&lt;/dt&gt;
        &lt;dd&gt;Bring up this help dialog&lt;/dd&gt;
      &lt;/dl&gt;
    &lt;/div&gt;&lt;!-- /.column.first --&gt;

    &lt;div class=&quot;column middle&quot; style=&amp;#39;display:none&amp;#39;&gt;
      &lt;h3&gt;Commit list&lt;/h3&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;j&lt;/dt&gt;
        &lt;dd&gt;Move selection down&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;k&lt;/dt&gt;
        &lt;dd&gt;Move selection up&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;c &lt;em&gt;or&lt;/em&gt; o &lt;em&gt;or&lt;/em&gt; enter&lt;/dt&gt;
        &lt;dd&gt;Open commit&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;y&lt;/dt&gt;
        &lt;dd&gt;Expand URL to its canonical form&lt;/dd&gt;
      &lt;/dl&gt;
    &lt;/div&gt;&lt;!-- /.column.first --&gt;

    &lt;div class=&quot;column last&quot; style=&amp;#39;display:none&amp;#39;&gt;
      &lt;h3&gt;Pull request list&lt;/h3&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;j&lt;/dt&gt;
        &lt;dd&gt;Move selection down&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;k&lt;/dt&gt;
        &lt;dd&gt;Move selection up&lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl class=&quot;keyboard-mappings&quot;&gt;
        &lt;dt&gt;o &lt;em&gt;or&lt;/em&gt; enter&lt;/dt&gt;
        &lt;dd&gt;Open issue&lt;/dd&gt;
      &lt;/dl&gt;
    &lt;/div&gt;&lt;!-- /.columns.last --&gt;

  &lt;/div&gt;&lt;!-- /.columns.equacols --&gt;

  &lt;div style=&amp;#39;display:none&amp;#39;&gt;
    &lt;div class=&quot;rule&quot;&gt;&lt;/div&gt;

    &lt;h3&gt;Issues&lt;/h3&gt;

    &lt;div class=&quot;columns threecols&quot;&gt;
      &lt;div class=&quot;column first&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;j&lt;/dt&gt;
          &lt;dd&gt;Move selection down&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;k&lt;/dt&gt;
          &lt;dd&gt;Move selection up&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;x&lt;/dt&gt;
          &lt;dd&gt;Toggle selection&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;o &lt;em&gt;or&lt;/em&gt; enter&lt;/dt&gt;
          &lt;dd&gt;Open issue&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;&lt;!-- /.column.first --&gt;
      &lt;div class=&quot;column middle&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;I&lt;/dt&gt;
          &lt;dd&gt;Mark selection as read&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;U&lt;/dt&gt;
          &lt;dd&gt;Mark selection as unread&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;e&lt;/dt&gt;
          &lt;dd&gt;Close selection&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;y&lt;/dt&gt;
          &lt;dd&gt;Remove selection from view&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;&lt;!-- /.column.middle --&gt;
      &lt;div class=&quot;column last&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;c&lt;/dt&gt;
          &lt;dd&gt;Create issue&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;l&lt;/dt&gt;
          &lt;dd&gt;Create label&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;i&lt;/dt&gt;
          &lt;dd&gt;Back to inbox&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;u&lt;/dt&gt;
          &lt;dd&gt;Back to issues&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;/&lt;/dt&gt;
          &lt;dd&gt;Focus issues search&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div style=&amp;#39;display:none&amp;#39;&gt;
    &lt;div class=&quot;rule&quot;&gt;&lt;/div&gt;

    &lt;h3&gt;Issues Dashboard&lt;/h3&gt;

    &lt;div class=&quot;columns threecols&quot;&gt;
      &lt;div class=&quot;column first&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;j&lt;/dt&gt;
          &lt;dd&gt;Move selection down&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;k&lt;/dt&gt;
          &lt;dd&gt;Move selection up&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;o &lt;em&gt;or&lt;/em&gt; enter&lt;/dt&gt;
          &lt;dd&gt;Open issue&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;&lt;!-- /.column.first --&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div style=&amp;#39;display:none&amp;#39;&gt;
    &lt;div class=&quot;rule&quot;&gt;&lt;/div&gt;

    &lt;h3&gt;Network Graph&lt;/h3&gt;
    &lt;div class=&quot;columns equacols&quot;&gt;
      &lt;div class=&quot;column first&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;&lt;span class=&quot;badmono&quot;&gt;←&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; h&lt;/dt&gt;
          &lt;dd&gt;Scroll left&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;&lt;span class=&quot;badmono&quot;&gt;→&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; l&lt;/dt&gt;
          &lt;dd&gt;Scroll right&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;&lt;span class=&quot;badmono&quot;&gt;↑&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; k&lt;/dt&gt;
          &lt;dd&gt;Scroll up&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;&lt;span class=&quot;badmono&quot;&gt;↓&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; j&lt;/dt&gt;
          &lt;dd&gt;Scroll down&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;t&lt;/dt&gt;
          &lt;dd&gt;Toggle visibility of head labels&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;&lt;!-- /.column.first --&gt;
      &lt;div class=&quot;column last&quot;&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;shift &lt;span class=&quot;badmono&quot;&gt;←&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; shift h&lt;/dt&gt;
          &lt;dd&gt;Scroll all the way left&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;shift &lt;span class=&quot;badmono&quot;&gt;→&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; shift l&lt;/dt&gt;
          &lt;dd&gt;Scroll all the way right&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;shift &lt;span class=&quot;badmono&quot;&gt;↑&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; shift k&lt;/dt&gt;
          &lt;dd&gt;Scroll all the way up&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;shift &lt;span class=&quot;badmono&quot;&gt;↓&lt;/span&gt; &lt;em&gt;or&lt;/em&gt; shift j&lt;/dt&gt;
          &lt;dd&gt;Scroll all the way down&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;&lt;!-- /.column.last --&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div style=&amp;#39;display:none&amp;#39;&gt;
    &lt;div class=&quot;rule&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;columns threecols&quot;&gt;
      &lt;div class=&quot;column first&quot; style=&amp;#39;display:none&amp;#39;&gt;
        &lt;h3&gt;Source Code Browsing&lt;/h3&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;t&lt;/dt&gt;
          &lt;dd&gt;Activates the file finder&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;l&lt;/dt&gt;
          &lt;dd&gt;Jump to line&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;w&lt;/dt&gt;
          &lt;dd&gt;Switch branch/tag&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl class=&quot;keyboard-mappings&quot;&gt;
          &lt;dt&gt;y&lt;/dt&gt;
          &lt;dd&gt;Expand URL to its canonical form&lt;/dd&gt;
        &lt;/dl&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

    &lt;div id=&quot;markdown-help&quot; class=&quot;instapaper_ignore readability-extra&quot;&gt;
  &lt;h2&gt;Markdown Cheat Sheet&lt;/h2&gt;

  &lt;div class=&quot;cheatsheet-content&quot;&gt;

  &lt;div class=&quot;mod&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;h3&gt;Format Text&lt;/h3&gt;
      &lt;p&gt;Headers&lt;/p&gt;
      &lt;pre&gt;
# This is an &amp;lt;h1&amp;gt; tag
## This is an &amp;lt;h2&amp;gt; tag
###### This is an &amp;lt;h6&amp;gt; tag&lt;/pre&gt;
     &lt;p&gt;Text styles&lt;/p&gt;
     &lt;pre&gt;
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
&lt;/pre&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;h3&gt;Lists&lt;/h3&gt;
      &lt;p&gt;Unordered&lt;/p&gt;
      &lt;pre&gt;
* Item 1
* Item 2
  * Item 2a
  * Item 2b&lt;/pre&gt;
     &lt;p&gt;Ordered&lt;/p&gt;
     &lt;pre&gt;
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b&lt;/pre&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;h3&gt;Miscellaneous&lt;/h3&gt;
      &lt;p&gt;Images&lt;/p&gt;
      &lt;pre&gt;
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
&lt;/pre&gt;
     &lt;p&gt;Links&lt;/p&gt;
     &lt;pre&gt;
http://github.com - automatic!
[GitHub](http://github.com)&lt;/pre&gt;
&lt;p&gt;Blockquotes&lt;/p&gt;
     &lt;pre&gt;
As Kanye West said:
&gt; We're living the future so
&gt; the present is our past.
&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;rule&quot;&gt;&lt;/div&gt;

  &lt;h3&gt;Code Examples in Markdown&lt;/h3&gt;
  &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;Syntax highlighting with &lt;a href=&quot;http://github.github.com/github-flavored-markdown/&quot; title=&quot;GitHub Flavored Markdown&quot; target=&quot;_blank&quot;&gt;GFM&lt;/a&gt;&lt;/p&gt;
      &lt;pre&gt;
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```&lt;/pre&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;Or, indent your code 4 spaces&lt;/p&gt;
      &lt;pre&gt;
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true&lt;/pre&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;Inline code for comments&lt;/p&gt;
      &lt;pre&gt;
I think you should use an
`&amp;lt;addr&amp;gt;` element here instead.&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;/div&gt;
&lt;/div&gt;

    &lt;div class=&quot;context-overlay&quot;&gt;&lt;/div&gt;

    
    
    
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></noscript></div>


<p>Then create a project with the cedar stack on heroku.</p>

<div><script src='https://gist.github.com/.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>


<p>Log in to Heroku and check out your app.</p>

<p><img src="http://media.tumblr.com/tumblr_lpp485CMTR1qfdxjm.png"></p>

<p>You should see something similar to the above. At this point you&#8217;ve created your project on heroku. Awesome, but there&#8217;s still more to do.</p>

<h2>Deploy your project to heroku</h2>

<p>Note the git repository listed on your project&#8217;s heroku page. Add it as a remote on your project with:</p>

<div><script src='https://gist.github.com/.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>


<p>But most likely you will get a slew of errors. What about database setup and all the other steps that go with production application setup?</p>

<h2>Set your project up for Heroku</h2>

<p>Here&#8217;s where Heroku&#8217;s Addon system comes in. Basically, you&#8217;re going to replace your database server, frontend load balancing / reverse proxy, and daemon processes / cron jobs with Heroku Addons. This is a subject for another post, but I&#8217;ll go over what my standard stack is.</p>

<p>Furthermore, Heroku has good documentation about their platform and Addons <a href="http://devcenter.heroku.com/">here</a></p>

<h2>My standard stack</h2>

<p>Lately I&#8217;ve been using Rails 3, Mongoid for models, Haml and Sass for views, and sendgrid for sending emails.</p>

<p>On Heroku I&#8217;ll install the following free Addons:</p>

<ul>
<li>Sendgrid for sending and receiving emails (200 a day free)</li>
<li>MongoLab for a free mongodb instance (240mb)</li>
<li>Advanced Logging</li>
<li>Custom Domain (for my own .com instead of a heroku subdomain)</li>
</ul>


<p>Note that your app slug (application files deployed to heroku) is limited to 100mb, but I have yet to run anywhere close to that. My side projects generally run around 10mb. Heroku recommends you use an asset host for any js/css/images.</p>

<p>Heroku, with these addons is enough to get any side project off the ground. And there&#8217;s always the option to scale up with Heroku, or move it to your  paid host once it starts to grow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Authentication Plugins]]></title>
    <link href="http://rawsyntax.github.com/blog/rails-authentication-plugins/"/>
    <updated>2011-07-30T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/rails-authentication-plugins</id>
    <content type="html"><![CDATA[<p>Considering which authentication plugin to use for rails? I have some recommendations.</p>

<h2>Devise</h2>

<p>Devise is a full featured authentication plugin. Featuring, remember me, forgot password, last seen timestamps, email confirmation, lockouts, and a slew of other features. They have pretty much anything you could ask for.</p>

<p>Devise supports activerecord and mongoid. I used it recently on a mongoid based rails 3 project. It worked wonderfully. I’ll post a code example of how I did it, in the next few weeks.</p>

<p>Check out their very helpful <a href="https://github.com/plataformatec/devise/wiki/_pages">wiki</a>, and their <a href="https://github.com/plataformatec/devise/wiki/Extensions">long list of extensions</a>.</p>

<h2>Warden</h2>

<p>Devise is actually built on top of warden. And warden is descendant from merb-auth <a href="http://merbivore.com">(merb)</a>. So, if you’re like me and quite familiar with merb-auth and it’s flexibility, you’ll feel right at home with warden. I use warden when I need just the basics, login / logout / signup. Also, if you happen to be doing some custom work when logging in, such as interfacing with an API or another system, warden is built to handle it.</p>

<p>See Mike Thomas’ post about <a href="http://finite.posterous.com/how-to-use-warden-authentication-with-rails-3">getting up and running with rails and warden</a></p>

<p><a href="https://github.com/hassox/warden">check out the code in github</a></p>

<p><a href="https://github.com/hassox/rails_warden">and the rails plugin</a></p>

<h2>Roll your own</h2>

<p>Some people prefer to write their own authentication system. Personally, I avoid reinventing the wheel when flexible solutions like warden and devise exist. However, there are some railscasts covering this topic in detail, if you’re interested to see how authentication works.</p>

<p><a href="http://railscasts.com/episodes/250-authentication-from-scratch">railscasts: authentication from scratch</a></p>

<p><a href="http://railscasts.com/episodes/270-authentication-in-rails-3-1">railscasts: rails 3.1 authentication</a></p>

<h2>Recommendations</h2>

<p>Use devise if you’re running a standard rails stack with activerecord or mongoid (or couch or datamapper if you try their extensions).</p>

<p>If you need to do some particularly strange things with authentication, I’d recommend warden. It’ll also work with any rack compatible web app (sinatra, and others).</p>

<p>Don’t bother rolling your own, warden and devise do a fine (and flexible) job, and there’s plenty of other authentication plugins not mentioned here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn Emacs: use defadvice to modify functions]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-emacs-use-defadvice-modify-functions/"/>
    <updated>2011-06-22T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-emacs-use-defadvice-modify-functions</id>
    <content type="html"><![CDATA[<p>I use defadvice to change the behavior of zap-to-char. In it’s original form, zap-to-char deletes all characters up to and including the matching character. I prefer it to behave more like zap-up-to-but-not-including-char. It’s more intuitive to me.</p>

<div><script src='https://gist.github.com/1038120.js?file='></script>
<noscript><pre><code>;; make zap-to-char act like zap-up-to-char
(defadvice zap-to-char (after my-zap-to-char-advice (arg char) activate)
  &quot;Kill up to the ARG'th occurence of CHAR, and leave CHAR.
  The CHAR is replaced and the point is put before CHAR.&quot;
  (insert char)
  (forward-char -1))
</code></pre></noscript></div>


<p>More on defadvice <a href="http://www.gnu.org/s/emacs/manual/html_node/elisp/Advising-Functions.html">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn Emacs: delete-file-and-buffer]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-emacs-delete-file-and-buffer/"/>
    <updated>2011-06-21T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-emacs-delete-file-and-buffer</id>
    <content type="html"><![CDATA[<p>From my ~/.emacs.d</p>

<div><script src='https://gist.github.com/1035862.js?file='></script>
<noscript><pre><code>(defun delete-file-and-buffer ()
  &quot;Deletes the current file and buffer, assumes file exists&quot;
  (interactive)
  (delete-file buffer-file-name)
  (kill-buffer (buffer-name)))
</code></pre></noscript></div>


<p>Inspired by <a href="https://sites.google.com/site/steveyegge2/my-dot-emacs-file">Steve Yegge&#8217;s .emacs file (rename-file-and-buffer)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make your Rails 3 app run faster]]></title>
    <link href="http://rawsyntax.github.com/blog/make-your-rails-3-app-run-faster/"/>
    <updated>2011-06-20T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/make-your-rails-3-app-run-faster</id>
    <content type="html"><![CDATA[<p>Profile it with <a href="https://github.com/igrigorik/slowgrowl">slowgrowl</a></p>

<p>It will issue growl alerts for slow actions (configurable)</p>

<p><img src="http://rawsyntax.github.com/images/rails-profile.png"></p>

<p>See <a href="https://github.com/igrigorik/slowgrowl">slowgrowl</a> for configuration options.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn Emacs: align-regexp]]></title>
    <link href="http://rawsyntax.github.com/blog/learn-emacs-align-regexp/"/>
    <updated>2011-06-20T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/learn-emacs-align-regexp</id>
    <content type="html"><![CDATA[<p>In this post I go over how to use emacs and align-regexp to clean up your code and make it more readable.</p>

<h4>From the Emacs Manual:</h4>

<p>align-regexp is an interactive autoloaded Lisp function in `align.el&#8217;.</p>

<p>It is bound to C-x .</p>

<p>(align-regexp BEG END REGEXP &amp;optional GROUP SPACING REPEAT)</p>

<p>Align the current region using an ad-hoc rule read from the minibuffer. BEG and END mark the limits of the region. This function will prompt for the REGEXP to align with. If no prefix arg was specified, you only need to supply the characters to be lined up and any preceding whitespace is replaced. If a prefix arg was specified, the full regexp with parenthesized whitespace should be supplied; it will also prompt for which parenthesis GROUP within REGEXP to modify, the amount of SPACING to use, and whether or not to REPEAT the rule throughout the line. See `align-rules-list&#8217; for more information about these options.</p>

<p>For example, let&#8217;s say you had a list of phone numbers, and wanted to align them so that the opening parentheses would line up:</p>

<pre><code>Fred (123) 456-7890

Alice (123) 456-7890

Mary-Anne (123) 456-7890

Joe (123) 456-7890
</code></pre>

<p>There is no predefined rule to handle this, but you could easily do it using a
REGEXP like &#8220;(&#8220;. All you would have to do is to mark the region, call `align-
regexp&#8217; and type in that regular expression.</p>

<h2>What I use align-regexp for</h2>

<div><script src='https://gist.github.com/1035839.js?file='></script>
<noscript><pre><code># before align-regexp, not super easy to read

var = 5
another_value = 10
assignment = 5
very_long_var_name = 25

# after align-regexp =, readability improved!

var                = 5
another_value      = 10
assignment         = 5
very_long_var_name = 25
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to get a Programming Interview]]></title>
    <link href="http://rawsyntax.github.com/blog/how-to-get-a-programming-interview/"/>
    <updated>2011-06-06T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/how-to-get-a-programming-interview</id>
    <content type="html"><![CDATA[<p>Before I get into the details, remember that persistence is critical in this. In my last job search, I lost count how many jobs I applied to. I also had one where I was sure I got the job, and they called to tell me why I didn&#8217;t get it. I got really discouraged for a couple days, and then resumed the job search. Keep at it. Remember, you only need one big hit.</p>

<h2>Figure out what your ideal job is</h2>

<p>Make a list of the qualities you want in a job. For me these qualities were telecommuting, ruby web development, small company. It&#8217;s not necessarily important to find the ideal job, but you need to come up with a way of scoring job opportunities.</p>

<h2>Ask friends / colleagues</h2>

<p>The easiest way to get a new job is through a friend. So exhaust those resources first. However, when you get the interview don&#8217;t assume you have the job in the bag because you&#8217;ve got a friend at the company. Still give it your best shot.</p>

<h2>Use the right job sites</h2>

<p>Figure out where the good jobs are getting posted. Personally, I was looking for a telecommute ruby job with a small company. The best sites for me were <a href="http://jobs.rubynow.com/">http://jobs.rubynow.com/</a>, <a href="http://toprubyjobs.com/,">http://toprubyjobs.com/,</a> and craigslist.</p>

<h2>Sell yourself in your cover letter</h2>

<p>I know a few developers that hate writing cover letters. This is more common in experienced developers. The more they know about programming, the more they realize they don&#8217;t know, and that can lead to a situation where they have a hard time selling themselves to companies. If you have trouble with this, start making an objective list of your accomplishments. Flesh them out a bit and you&#8217;ve got a good start.</p>

<h2>Tailor your cover letter for each job</h2>

<p>I keep a standard cover letter targeting ruby web developer jobs in my email. I then edit and tailor it specifically to the job ad. This saves a lot of time, as opposed to writing a cover letter from scratch every time. Saving time means you can apply for more jobs, and get more interviews.</p>

<h2>What to put in a cover letter</h2>

<p>I write about how my experience has made me a good candidate for the job listing, and I link to source code and running websites that I&#8217;ve built. It&#8217;s important to signal to the employer ASAP that you are not bullshitting, and you really can code.</p>

<h2>Tailor your resumé</h2>

<p>I also keep a standard detailed resume on my computer. For each job I may highlight some experience or detail certain areas more than others. Be careful here. Be sure that everything you write on there is rock solid, and that you can back it up. I spend less time on tweaking the resume and more time tweaking the cover letter.</p>

<h2>I got the interview, what now?</h2>

<p><a href="http://rawsyntax.github.com/blog/interviewing-for-programmers">Read my earlier post on interviewing for a programming job</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interviewing for Programmers]]></title>
    <link href="http://rawsyntax.github.com/blog/interviewing-for-programmers/"/>
    <updated>2011-06-02T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/interviewing-for-programmers</id>
    <content type="html"><![CDATA[<p>Interviewing is a funny thing. In order to get hired for a programming job it&#8217;s most important to interview well. Getting hired usually doesn&#8217;t have much to do with programming skills. This is typically a pain point for programmers. Many of us feel that the hiring process should be changed. Personally, I&#8217;m ok with the hiring process as it is. It could be improved, but I&#8217;m going to tell you how to get a job anyway.</p>

<h2>It&#8217;s a skill</h2>

<p>Treat interviewing like a skill. It&#8217;s going to require some practice. It&#8217;s quite different from programming. Something I&#8217;ve noticed about  over the years is that the inexperienced naive ones tend to think that they know everything whereas experienced programmers know more what they don&#8217;t know. So as you grow as a programmer, you may even think of yourself as  worse programmer because you grow aware of what you don&#8217;t know. This is problematic when interviewing because you are essentially selling yourself to the company. If you don&#8217;t feel the product is good how can you sell it effectively? The next step is to figure out how to sell yourself.</p>

<h2>Practice your pitch</h2>

<p>I firmly believe that you have to have a game plan for the interview. Be familiar with everything you wrote on your resume. Have answers for the most common questions. Be able to relate specific experiences in your career in away that shows your strengths. Have your own pitch ready in the case that the interviewer doesn&#8217;t have much to say. I&#8217;ve had interviews where the interviewer simply asked open ended questions. It&#8217;s good to have your pitch ready to hit these questions out of the park.</p>

<h2>Code Examples</h2>

<p>Programming during the interview is silly. It&#8217;s not an accurate evaluation of a programmer&#8217;s skills, and I&#8217;m not sure what it serves to show the interviewer. I find that an easy way to avoid doing coding during the interview is to have some code examples ready for the interviewer to see. It&#8217;s important for the interviewer to both see the code and be able to run the app. Personally, I&#8217;ll build a side project in rails and host it on heroku, which allows the interviewer to review code and easily try out the app.</p>

<p><a href="http://rawsyntax.github.com/blog/importance-of-side-projects">More on side projects here</a>.</p>

<h2>All interviews are practice</h2>

<p>Many programmers get nervous during interviews. I calm my nerves by remembering that all interviews are practice. If you don&#8217;t get the job it&#8217;s not a big deal. Simply apply for another job and interview for that one. In the meantime, I get real practice to hone my interview skills. However, before that next interview it&#8217;s important to try to learn from the interview you just had.</p>

<h2>Evaluate your performance</h2>

<p>What went wrong in the last interview? Where could you have improved? What went well? It&#8217;s important to critique your performance shortly after your interview. That way you won&#8217;t miss anything since everything will be fresh in your mind.</p>

<h2>But how do I GET an interview?</h2>

<p>That&#8217;s the subject of my next post. I&#8217;ll go over resume and cover letter writing, and some other topics. <a href="http://rawsyntax.github.com/blog/how-to-get-a-programming-interview">Read it here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Importance of Side Projects]]></title>
    <link href="http://rawsyntax.github.com/blog/importance-of-side-projects/"/>
    <updated>2011-05-29T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/importance-of-side-projects</id>
    <content type="html"><![CDATA[<p>Side projects are important for a few reasons. Programming is a creative process. Side projects allow programming without deadlines or restraints. Side projects allow programming in an exploratory way.</p>

<h2>Explore new technologies</h2>

<p>Every day there are more and more bleeding edge technologies coming out. A side project is a great place to try them out. There&#8217;s no reason to worry about bugs or performance issues because it&#8217;s just a side project. You&#8217;re not depending on the project to pay your bills. It&#8217;s ok if the website crashes.</p>

<h2>Creating from scratch</h2>

<p>Most jobs I&#8217;ve had so far were mostly maintenance work. Adding new features, fixing bugs, troubleshooting performance problems, refactoring existing code. Though I&#8217;ve built more than a few applications from scratch, it only takes me a couple months to lay the foundation, and then I&#8217;m in maintenance mode again.</p>

<p>Side projects require creating from scratch on a regular basis. I love this step because I get to step back and take everything I&#8217;ve learned and put that into creating a new (and improved) project.</p>

<h2>Good enough to launch</h2>

<p>Working on a side project is also an exercise in avoiding analysis paralysis. If you&#8217;re starting from scratch, the possibilities are endless. A good way to avoid this is to make your short list of must have features, and then launch a beta when you have those features. A so called <a href="http://en.wikipedia.org/wiki/Minimum_viable_product">minimum viable product</a>.</p>

<h2>Staving off burnout</h2>

<p>Work on your passion. Work on something that is fun. If you&#8217;re a developer who is about to burnout because you don&#8217;t enjoy what you&#8217;re working on, try creating your own side project. It will remind you why programming is fun.</p>

<h2>Keeping your skillset current</h2>

<p>Maybe you&#8217;re working with old technology at your day job. Maybe you&#8217;re bored with your current skillset and want to learn some new skills. Side  are a great way to keep current with emerging trends in software. Never tried node.js? Great, make a small side project using it. All of a sudden you have something to show off as proof of your newly acquired skills.</p>

<h2>Complete your side project</h2>

<p>One of the problems with side projects is that they can remain incomplete. You may start on a project with all the gusto in the world, but then it&#8217;s two months later and you can&#8217;t remember the last time you worked on the side project. Nevertheless it&#8217;s important to push forward and complete the project. On that note, I&#8217;m off to do some work on my side project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[20337 Available Alliterative .com domain names]]></title>
    <link href="http://rawsyntax.github.com/blog/20337-available-alliterative-com-domain-names/"/>
    <updated>2011-04-22T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/20337-available-alliterative-com-domain-names</id>
    <content type="html"><![CDATA[<p>Save this file <a href="http://dl.dropbox.com/u/2814426/domains.txt.zip">domains.txt.zip</a></p>

<p>Here&#8217;s my <a href="http://www.namecheap.com?aff=18181">namecheap affiliate link</a> if you find any worth registering.</p>

<h2>The Code</h2>

<p>Checkout the <a href="https://gist.github.com/e58c31f2d5d393800853">gist</a> and run it.</p>

<p>It&#8217;s a ruby script that loads a dictionary of common words, restricts word length, combines two that start with the same letter, and issues a whois query to check if it&#8217;s available. Feel free to tweak it to your own needs. It also has some sleep calls to avoid flooding the whois server. Let it run for a couple days, see what comes out.</p>

<p>I actually generated <a href="http://rawsyntax.com">rawsyntax.com</a> using this script.</p>

<p>Inspiration to post the code and other domains here goes to <a href="http://kevinohashi.com">kevin ohashi</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 Email Validation]]></title>
    <link href="http://rawsyntax.github.com/blog/rails-3-email-validation/"/>
    <updated>2011-04-21T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/rails-3-email-validation</id>
    <content type="html"><![CDATA[<p>Most email validation I&#8217;ve encountered goes bananas with regards to regexes. The programmer tries to strictly adhere to the spec (<a href="http://www.ietf.org/rfc/rfc0822.txt">rfc 822</a>) in a regex. Not only is this task difficult and error prone, but there are functional email addresses out there that do not conform to the spec. Not to mention the resulting regex often looks like <a href="http://www.ex-parrot.com/pdw/Mail-RFC822-Address.html">this</a>.</p>

<p>When I do email validation I use a simple regex:</p>

<div><script src='https://gist.github.com/934791.js?file='></script>
<noscript><pre><code>/^([\w\.%\+\-]+)@([\w\-]+\.)+([\w]{2,})$/i
</code></pre></noscript></div>


<p>Which I took from the <a href="http://github.com/platformatec/devise">Devise</a> codebase. It means:</p>

<ul>
<li>begins with one or more word characters, period, percent, plus, or dashes</li>
<li>then one at symbol</li>
<li>then one or more word characters, dashes, and then a period</li>
<li>ends with 2 or more word characters</li>
<li>case-insensitive</li>
</ul>


<p>This regex ensures a reasonably close to valid email address, without enumerating and worrying about .com vs .co.uk vs .musem and a host of other issues.</p>

<p>At this point, I have the application send an email to the address, and require the user to click a confirmation link. That&#8217;s good enough, and very simple to implement.</p>

<p><a href="http://rubular.com/r/YTzbCkatJy">Try this regex out on Rubular</a> it&#8217;s an interactive web based ruby regex engine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quicksilver Lockscreen]]></title>
    <link href="http://rawsyntax.github.com/blog/quicksilver-lockscreen/"/>
    <updated>2011-04-13T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/quicksilver-lockscreen</id>
    <content type="html"><![CDATA[<p><img src="http://rawsyntax.github.com/images/quicksilver-lockscreen.png"></p>

<p>I&#8217;ve recently started locking my screen on OSX. However I found that <a href="http://qsapp.com">Quicksilver&#8217;s</a> LockScreen script did not work. I believe it was designed for Leopard.</p>

<p>The workaround I&#8217;ve found is to start ScreenSaverEngine with Quicksilver, and set my Security.prefs to require a password.</p>

<p>UPDATE: In OS X Lion, I&#8217;ve found that ScreenSaverEngine is nowhere to be found.  So I just use the LockScreen button in the menu bar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Negotiate Salary]]></title>
    <link href="http://rawsyntax.github.com/blog/how-to-negotiate-salary/"/>
    <updated>2011-04-13T00:00:00-04:00</updated>
    <id>http://rawsyntax.github.com/blog/how-to-negotiate-salary</id>
    <content type="html"><![CDATA[<p>Over the past couple weeks, I&#8217;ve seen a number of posts on <a href="http://news.ycombinator.com">hacker news</a> talking about <a href="http://news.ycombinator.com/item?id=2309317">salary</a> <a href="http://news.ycombinator.com/item?id=2438980">negotiation</a>.</p>

<p>There are even authors who make a living writing books about salary negotiation. Salary negotiation is not complicated. I can explain how I do it in one sentence. I haven&#8217;t read any of these negotiation books by the way.</p>

<h2>The Secret to Salary Negotation</h2>

<p>Figure out what salary you are happy with, and apply for jobs until you can find an employer that will pay you that amount.</p>

<p>I won&#8217;t disclose my current salary, but I will say that in my recent job search I&#8217;ve had a few employers turn me down, and a few employers offer a job at my salary.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URL Validation in Rails 3 (and ruby in general)]]></title>
    <link href="http://rawsyntax.github.com/blog/url-validation-in-rails-3-and-ruby-in-general/"/>
    <updated>2011-01-20T00:00:00-05:00</updated>
    <id>http://rawsyntax.github.com/blog/url-validation-in-rails-3-and-ruby-in-general</id>
    <content type="html"><![CDATA[<p>I&#8217;ve seen some approaches, most notably <a href="http://www.igvita.com/2006/09/07/validating-url-in-ruby-on-rails/">here on igvita</a>. Though the reference on igvita is quite dated (2006 ??? being more or less the beginning of the epoch in rails-years), I&#8217;ve seen plenty of code using the validate-a-uri-by-regex approach.</p>

<p>It doesn&#8217;t work and pretty much always ends up excluding valid urls. This is why I prefer to use the parsing approach. If the url can be parsed, and the scheme seems reasonably valid, good enough.</p>

<h2>An Interesting URL Problem</h2>

<p>Recently I ran into a situation where I needed to be able to validate and handle unicode / internationalized links. One such link would be <a href="http://%D0%BA%D1%86.%D1%80%D1%84">the russian tld registrar кц.рф</a>. The typical approach of parsing with URI fails below</p>

<div><script src='https://gist.github.com/789195.js?file='></script>
<noscript><pre><code>#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'uri'

URI.parse(&quot;кц.рф&quot;)

# fails with the following error
#
#/Users/eric/.rvm/rubies/ruby-1.9.2-p136/lib/ruby/1.9.1/uri/common.rb:156:in `split': bad URI(is not
# URI?): кц.рф (URI::InvalidURIError)
#   from /Users/eric/.rvm/rubies/ruby-1.9.2-p136/lib/ruby/1.9.1/uri/common.rb:174:in `parse'
#   from /Users/eric/.rvm/rubies/ruby-1.9.2-p136/lib/ruby/1.9.1/uri/common.rb:628:in `parse'
#   from ./uri-parse.rb:6:in `&lt;main&gt;'
</code></pre></noscript></div>


<h2>The Solution</h2>

<p>At this point, I happened to remember there is another library for parsing URIs. It&#8217;s called <a href="https://github.com/sporkmonger/addressable">Addressable::URI</a>. Its aim is to be a full replacement of the ruby standard library&#8217;s URI module.</p>

<p>More importantly, it successfully parses unicode urls.</p>

<div><script src='https://gist.github.com/789235.js?file='></script>
<noscript><pre><code>#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'addressable/uri'

Addressable::URI.parse(&quot;кц.рф&quot;)

# no problem at all</code></pre></noscript></div>


<p>Here&#8217;s how I do URL validation in rails 3, using ActiveModel and Addressable::URI.</p>

<div><script src='https://gist.github.com/789162.js?file='></script>
<noscript><pre><code>class Example
  include ActiveModel::Validations

  ##
  # Validates a URL
  #
  # If the URI library can parse the value, and the scheme is valid
  # then we assume the url is valid
  #
  class UrlValidator &lt; ActiveModel::EachValidator
    def validate_each(record, attribute, value)
      begin
        uri = Addressable::URI.parse(value)

        if ![&quot;http&quot;,&quot;https&quot;,&quot;ftp&quot;].include?(uri.scheme)
          raise Addressable::URI::InvalidURIError
        end
      rescue Addressable::URI::InvalidURIError
        record.errors[attribute] &lt;&lt; &quot;Invalid URL&quot;
      end
    end
  end

  validates :field, :url =&gt; true
end</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freelancing on oDesk]]></title>
    <link href="http://rawsyntax.github.com/blog/freelancing-on-odesk/"/>
    <updated>2010-12-06T00:00:00-05:00</updated>
    <id>http://rawsyntax.github.com/blog/freelancing-on-odesk</id>
    <content type="html"><![CDATA[<p>Since the start of my career as a professional programmer, I&#8217;ve been interested in doing contract work online. Over the years I&#8217;ve half-heartedly tried to get jobs on sites like <a href="http://www.elance.com/">elance</a>, <a href="http://rentacoder.com">rentacoder</a>, and <a href="http://www.guru.com">guru</a>. I never had any success. All I found was employers / providers offering $200 fixed-bid contracts for building <a href="http://facebook.com">facebook</a> / <a href="http://ebay.com">ebay</a> clones, and workers willing to work for way less than I would or even could. In November 2010, after reading enough posts on <a href="http://news.ycombinator.com">hacker news</a> I decided to give <a href="http://odesk.com">oDesk</a> an honest try.</p>

<h2>Trying oDesk for a Full Month</h2>

<p>I committed myself to trying get jobs on <a href="http://www.odesk.com">oDesk</a> for a full month. I found the usual unrealistic jobs (demanding everything for nothing). I focused narrowly on <a href="http://www.ruby-lang.org/">ruby</a> and <a href="http://rubyonrails.org">rails</a> since that&#8217;s been the focus of my skill-set the past few years.</p>

<h2>Fixed-bid Projects</h2>

<p>After a few days of applying to 2-3 jobs per day, I finally got an acceptance. It should be noted that for each of these jobs I wrote a detailed and specially tailored cover letter selling myself to the employer. I believe this is crucial. Writing cover letters is worth getting good at.</p>

<p>The job was to modify the
<a href="https://github.com/Shopify/active_merchant">ActiveMerchant</a> gem to add support for a new payment gateway. I wrote <a href="https://jadedpixel.lighthouseapp.com/projects/11599/tickets/199-patch-added-merchant-warrior-gateway">this patch</a> for <a href="http://merchantwarrior.com">MerchantWarrior</a> in about 8 hours start to finish. It was a fixed bid project and the employer paid me promptly.</p>

<p>I got this project after only a few days, and I was ready for more. The next job I did was basically rails troubleshooting for another developer over skype. It consisted of a few small bugs, each of which were small fixed-bid projects. The guy would skype me, name his price, then I&#8217;d fix his bugs in his rails applications, explain why, and he&#8217;d pay me. It wasn&#8217;t much money, but these were small bugs, and it boosted my feedback rating on <a href="http://odesk.com">oDesk</a>.</p>

<p>On to the next job! November was turning out to be a good month for trying out online contracting. At this point I had only done fixed-bid contracts. I wanted something bigger. I wanted hourly work on <a href="http://odesk.com">oDesk</a>. Hourly work is special because <a href="http://odesk.com">oDesk</a> guarantees payment for hours worked. They have an application that you run on your desktop that tracks hours worked, takes screenshots, and lists average keystrokes and mouse actions.</p>

<h2>Hourly Work</h2>

<p>The first hourly project I got was a small ruby integration with <a href="http://ifbyphone.com">ifbyphone</a>. I had used ifbyphone before, so I wrote a cover letter selling myself hard (knowing ruby, having used ifbyphone before). I was also asked to justify my hourly rate, since it was higher than the typical hourly rate on <a href="http://odesk.com">oDesk</a>. This was easy enough.</p>

<p>As soon as I delivered the code for this project, the employer offered me some work building a ruby gem. It&#8217;s basically a simplistic template-based email parser. It&#8217;s rather fragile, but given the employer&#8217;s time constraints, it does what he wants. Check out the code at <a href="http://github.com/himmel/text_parser">my github repo</a>. I ended up codifying the employer&#8217;s requirements into <a href="http://rspec.info">rspec</a> tests.</p>

<p>Once I finished that project, the same employer offered me some more hourly work in the form of a rails project. It&#8217;s a microsite for people who play farmville. For the record, I do not play farmville. There are plenty of other more interesting video games to play. The site is basically a lookup table for some farmville data. It&#8217;s sortable and can be filtered to the user&#8217;s specifications. I&#8217;m not yet finished with this project.</p>

<h2>Hire Me!</h2>

<p>When I do finish my current hourly project, I&#8217;ll be looking for more hourly work. Feel free to <a href="mailto:eric@rawsyntax.com">contact me</a> with any projects involving:</p>

<ul>
<li>ruby webdev (sinatra, rails, merb …)</li>
<li>rails 3 (haml, sass, compass, mongoid, datamapper, rspec …)</li>
<li>jquery / javascript</li>
<li>css / frontend design work (I use compass-style and sass)</li>
<li>native iPhone apps (I use Titanium Appcelerator to build them in javascript)</li>
</ul>


<p><a href="http://www.odesk.com/users/~~d0ebf468e66ceacd">here&#8217;s my odesk profile</a></p>

<h2>Inspiration</h2>

<p>This post has been inspired by <a href="http://www.kreci.net/">kreci&#8217;s</a>, 5 part series onfreelancing <a href="http://www.kreci.net/reports/gave-up-a-day-job-now-what-income-report-1/">1</a>, <a href="http://www.kreci.net/reports/gave-up-a-day-job-now-what-%E2%80%93-income-report-2/">2</a>, <a href="http://www.kreci.net/reports/gave-up-a-day-job-now-what-income-report-3/">3</a>, <a href="http://www.kreci.net/reports/android-developer-income-report/">4</a>, <a href="http://www.kreci.net/reports/developer-income-report-5/">5</a>, <a href="http://gilesbowkett.blogspot.com/2010/10/current-status-of-entrepreneurial.html">giles bowkett</a>, and various posts about freelancing on <a href="http://news.ycombinator.com">hacker news</a></p>
]]></content>
  </entry>
  
</feed>
